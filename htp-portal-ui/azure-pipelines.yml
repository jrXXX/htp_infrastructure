# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- main
- feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  ImageName: htp-portal-ui

stages:
- stage: Build_Docker
  displayName: Build image (Docker)
  jobs:
  - job: Build
    displayName: Build Docker
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DockerInstaller@0
      displayName: DockerInstaller - 18.06.1-ce
      inputs:
        dockerVersion: '18.06.1-ce'
    - task: DockerCompose@0
      inputs:
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up'
        arguments: '--build openapi_generator'
        qualifyImageNames: false
        currentWorkingDirectory: 
    - task: Docker@2
      displayName: Build $(ImageName)
      inputs:
        repository: '$(ImageName)'
        command: 'build'
        Dockerfile: '**/Dockerfile-Prod'
        container: $(ImageName)
        tags: latest
        arguments: -t $(ImageName):$(Build.BuildId)

    - task: Docker@0
      displayName: show all docker images
      inputs:
        action: Run a Docker command
        customCommand: 'images'

    - task: Docker@0
      displayName: save $(ImageName):$(Build.BuildId)
      inputs:
        action: Run a Docker command
        customCommand: 'save -o $(Build.ArtifactStagingDirectory)/$(ImageName).tar $(ImageName):$(Build.BuildId)'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(ImageName).docker'
        publishLocation: 'Container'


- stage: Build_Core
  displayName: Build image (Node.js)
  jobs:
  - job: Build
    displayName: Build (Node.js)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - script: npm install
      displayName: 'npm install'

    - script: npm run build-prod
      displayName: 'npm run build-prod'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'dist/htp-portal-ui'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(ImageName).java'
        publishLocation: 'Container'
